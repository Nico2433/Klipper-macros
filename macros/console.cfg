[gcode_macro RESPOND]
rename_existing: BASE_RESPOND  # Rename the existing RESPOND command to BASE_RESPOND
gcode:
    ##### Define valid colors for message formatting #####
    {% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}

    ##### Validate TYPE and MSG parameters #####
    {% if params.TYPE is defined and params.MSG is defined %}
        {% if params.TYPE in ('echo', 'echo_no_space', 'command', 'error') and params.TYPE != '' %}
            {% set type = 'TYPE=' + params.TYPE|string %}  ; Set the TYPE parameter
        {% else %}
            RESPOND TYPE=error MSG="RESPOND TYPE '{params.TYPE}' is invalid. Must be one of 'echo', 'echo_no_space', 'command' or 'error'"
        {% endif %}
    {% endif %}

    ##### Default color value #####
    {% set color = "DEFAULT" %}  ; Default garbage value for color

    ##### Apply color to the main message body if COLOR is provided #####
    {% if params.MSG is defined and params.COLOR is defined %}
        {% set color = params.COLOR|lower %}  ; Convert color to lowercase

        {% if color in colors %}  ; Check if the color is valid
            {% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}  # Apply color to the message
        {% else %}
            RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
        {% endif %}

    ##### If no color is provided, use the default message format #####
    {% elif params.MSG is defined %}
        {% set msg = 'MSG="' + params.MSG + '"'|string %}  ; Use the message without color
    {% endif %}

    ##### Handle PREFIX and PREFIX_COLOR parameters #####
    {% if params.PREFIX is defined and params.PREFIX_COLOR is defined %}
        {% set prefixColor = params.PREFIX_COLOR | default("DEFAULT") | lower %}  ; Convert prefix color to lowercase

        {% if prefixColor in colors %}  ; Check if the prefix color is valid
            {% set prefix = 'PREFIX="<span class=' + prefixColor + '--text>' + params.PREFIX + '</span>"'|string %}  ; Apply color to the prefix
        {% elif color in colors %}  ; Fall back to the main color if prefix color is invalid
            {% set prefix = 'PREFIX="<span class=' + color + '--text>' + params.PREFIX + '</span>"'|string %}
        {% else %}
            RESPOND TYPE=error MSG="RESPOND PREFIX_COLOR '{prefixColor}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
        {% endif %}

    ##### If no PREFIX_COLOR is provided, use the main color for the prefix #####
    {% elif params.PREFIX is defined and color in colors %}
        {% set prefix = 'PREFIX="<span class=' + color + '--text>' + params.PREFIX + '</span>"'|string %}

    ##### If no valid colors are provided, use the default prefix format #####
    {% elif params.PREFIX is defined %}
        {% set prefix = 'PREFIX="' + params.PREFIX + '"'|string %}

    ##### If no prefix is provided, leave it empty #####
    {% else %}
        {% set prefix = "" | string %}
    {% endif %}

    ##### Call the original RESPOND command with the formatted parameters #####
    BASE_RESPOND {type} {prefix} {msg}

[gcode_macro TEST_RESPOND]
gcode:
    RESPOND MSG="normal message with no prefix"
    RESPOND PREFIX="normal prefix" MSG="normal message"
    RESPOND PREFIX="normal prefix" MSG="echo message" TYPE="echo"
    RESPOND PREFIX="normal prefix" MSG="echo_no_space message" TYPE="echo_no_space"
    RESPOND PREFIX="normal prefix" MSG="command message" TYPE="command"
    RESPOND PREFIX="normal prefix" MSG="error message (messages of type error which have a prefix are printed normally)" TYPE="error"
    RESPOND MSG="error message (plain old message with no prefix supplied)" TYPE="error"
    RESPOND PREFIX="normal prefix (no separate prefix color)" MSG="info message" COLOR="info"
    RESPOND PREFIX="accented prefix" PREFIX_COLOR="accent" MSG="info message" COLOR="info"
    RESPOND PREFIX="warning prefix" PREFIX_COLOR="warning" MSG="error message" COLOR="error"
    RESPOND PREFIX="prefix with invalid color" PREFIX_COLOR="garbage" MSG="secondary message" COLOR="secondary"